-----------------KRAZ SOL888888888====================
FIRST APPROACH

boolean isPalindrome(Node head) 
   {
       int sum=0,m,a=0;
       Node p=head;
       while(p!=null){
           sum=sum*10+p.data;
           p=p.next;
       }
       m=sum;
       while(sum>0){
           a=a*10+sum%10;
           sum=sum/10;
       }
       if(m==a){
           return true;
       }
       return false;
       SECONG APPREOACH
       class Solution
{
    //Function to check whether the list is palindrome.

   //Function to check whether the list is palindrome.
   
    public static Node reverseLL(Node node)
        {
            Node prev= null;
            Node curr=node;
            while(curr!=null)
            {
                Node temp=curr.next;
                curr.next=prev;
                prev=curr;
                curr=temp;
            }
            return prev;
        }
        public static Node mid(Node head)
        {
            Node s=head;
            Node f=head;
            while(f!=null && f.next!=null)
            {
                s=s.next;
                f=f.next.next;
            }
            return s;
        }
    boolean isPalindrome(Node head) 
    {
        //Your code her
        Node m=mid(head);
        Node r=reverseLL(m);
        
        while(r!=null)
        {
            if(r.data!=head.data) return false;
            r=r.next;
            head=head.next;
        }
        return true;
    }    
}

       
