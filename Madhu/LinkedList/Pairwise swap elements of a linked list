class Solution {
    // Function to pairwise swap elements of a linked list.
    // It should returns head of the modified list
    public Node pairwiseSwap(Node head)
    {
        // code here
        if(head==null || head.next== null) return head;
        Node first= head;
        Node prev= new Node (-1);
        head=head.next;
        while(first!=null && first.next!=null)
        {
            Node second = first.next;
            Node third = second.next;
           prev.next=second;
            second.next=first;
             
            first.next=third;
            prev=first;
            first=third;
            
        }
        return head;
    //      int c =0;
    
    //   Node pre = null, curr = head, f =null;
    //   while(curr!=null && c<2){
    //       f = curr.next;
    //       curr.next = pre;
    //       pre = curr;
    //       curr = f;
    //       c++;
    //   }
    //   if(f!=null){
    //       head.next = pairwiseSwap(f);
    //   }
    
    //  return pre;
    }
}
